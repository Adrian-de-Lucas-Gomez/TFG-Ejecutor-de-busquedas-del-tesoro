{"ast":null,"code":"var _jsxFileName = \"C:\\\\Universidad\\\\4Universidad\\\\TFG\\\\ejemploReact\\\\src\\\\components\\\\formOne\\\\steps\\\\Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  _s();\n\n  //Esto es como un using en c++\n  //Donde almacenamos la pregunta\n  const [question, setQuestion] = useState(\"\"); //Array con las posibles respuestas a esa pregunta\n\n  const [answers, setAnswers] = useState([]); //Respuesta en proceso\n\n  const [currAnswer, setCurrAnswer] = useState(\"\"); //const [quizAddFunction, setFuncion] = useState<Function>(props.funcion);\n\n  const [index, setIndex] = useState(props.order); //Nada mas montarme le pregunto al contenedor si ya existe el array en el que se van a almacenar todos los datos\n  //si NO existe lo creamos\n\n  useEffect(() => {\n    //Le digo que me de el valor de DATA y un valor por defecto en caso de NO encontrarlo, si obtengo el valor por defecto \n    //le asigno el un valor inicial\n    if (props.getState('DATA', \"\") === \"\") {}\n  }, []);\n\n  const modifyQuestion = e => {\n    setQuestion(e);\n    props.setState('firstname', \"Hola\", ''); //ME hago con el estado actual del array de info de la aventura\n\n    let new_state = props.getState('DATA', '{nombre: \"hola\"}');\n    var casteado = {\n      nombre: \"Hola a todos\",\n      fases: [{}]\n    };\n    casteado.fases[props.order] = {\n      pregunta: \"Hola a todos\"\n    };\n    var vueltaAString = JSON.stringify(casteado);\n    print(vueltaAString);\n    props.setState('DATA', vueltaAString, \"\");\n  };\n\n  const handleNewQuestion = e => {\n    e.preventDefault();\n    addAnswer(currAnswer);\n    setCurrAnswer(\"\");\n  }; //Funcion que genera algo de tipo JSON que va a pedir la App cuando vaya a generar un JSON con la aventura\n\n\n  function DataForJSON() {\n    downloadFile(JSON.stringify({\n      pregunta: question,\n      respuestas: answers\n    }, null, 2), 'answers.json', 'text/json');\n    console.log(\"Vamos a meter un quiz, mi indice es \" + index);\n    console.log(\"Mi pregunta: \" + question + \", \" + question.toString() + \", \" + question.valueOf() + \" , \" + {\n      question\n    }.question + \", \" + {\n      question\n    });\n    console.log(\"Referencia \" + JSON.stringify(question, null, 2) + \",\" + JSON.stringify({\n      question\n    }, null, 2));\n    let myData = {\n      Pregunta: question,\n      Respuestas: answers,\n      indi: index\n    };\n    myData.Respuestas = answers;\n    return myData;\n  }\n\n  const DataParaJSON = () => {\n    var myData = {\n      Pregunta: question,\n      Respuestas: answers,\n      indi: index\n    };\n    myData.Respuestas = answers;\n    return myData;\n  };\n\n  const addAnswer = text => {\n    console.log(\"Respuesta aÃ±adida\");\n    setAnswers([...answers, {\n      text,\n      isCorrect: false\n    }]);\n  };\n\n  const removeAnswer = index => {\n    const newAnswers = [...answers];\n    newAnswers.splice(index, 1);\n    setAnswers(newAnswers);\n  };\n\n  const setAnswerAsCorrect = index => {\n    const newAnswers = [...answers];\n    newAnswers[index].isCorrect = !newAnswers[index].isCorrect;\n    setAnswers(newAnswers);\n  };\n\n  const downloadFile = (data, fileName, fileType) => {\n    // Create a blob with the data we want to download as a file\n    const blob = new Blob([data], {\n      type: fileType\n    }); // Create an anchor element and dispatch a click event on it\n    // to trigger a download\n\n    const a = document.createElement('a');\n    a.download = fileName;\n    a.href = window.URL.createObjectURL(blob);\n    const clickEvt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n    a.dispatchEvent(clickEvt);\n    a.remove();\n  };\n\n  const exportToJson = e => {\n    //Para que no se refresque la pagina en el onSubmit\n    e.preventDefault();\n\n    if (question !== \"\" && answers.length >= 2 && answers.length <= 6) {\n      console.log(\"Llamada a export to JSON\");\n      downloadFile(JSON.stringify({\n        pregunta: question,\n        respuestas: answers\n      }, null, 2), 'answers.json', 'text/json');\n    } else {\n      console.log(\"Rellena bien\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Configuracion de evento de quiz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A\\xF1ada aqui la pregunta del cuestionario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        required: true,\n        value: question,\n        onChange: e => modifyQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pregunta actual: \", question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewQuestion,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        required: true,\n        value: currAnswer,\n        onChange: e => setCurrAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary mt-2\",\n        type: \"submit\",\n        children: \"Add Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-md-left\",\n          style: {\n            textDecoration: answer.isCorrect ? \"underline\" : \" \"\n          },\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary mt-2\",\n          onClick: () => setAnswerAsCorrect(index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !answer.isCorrect ? \"Correcta\" : \"Incorrecta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-danger mt-2\",\n          onClick: () => removeAnswer(index),\n          children: \"Borrar respuesta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 16\n        }, this)]\n      }, \"Respuesta: \" + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: exportToJson,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary mt-2\",\n        type: \"submit\",\n        children: \"Creame un JSON hijo mio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"EivJ4ldps+ZnZwfO1YvKQ8tjDww=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Universidad/4Universidad/TFG/ejemploReact/src/components/formOne/steps/Quiz.tsx"],"names":["React","Fragment","useState","useEffect","Quiz","props","question","setQuestion","answers","setAnswers","currAnswer","setCurrAnswer","index","setIndex","order","getState","modifyQuestion","e","setState","new_state","casteado","nombre","fases","pregunta","vueltaAString","JSON","stringify","print","handleNewQuestion","preventDefault","addAnswer","DataForJSON","downloadFile","respuestas","console","log","toString","valueOf","myData","Pregunta","Respuestas","indi","DataParaJSON","text","isCorrect","removeAnswer","newAnswers","splice","setAnswerAsCorrect","data","fileName","fileType","blob","Blob","type","a","document","createElement","download","href","window","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","exportToJson","length","target","value","map","answer","textDecoration"],"mappings":"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","sourcesContent":["import { queries } from \"@testing-library/react\";\r\nimport { StepComponentProps } from '../../Steps';\r\nimport React, {Fragment, useState, useEffect,useImperativeHandle, forwardRef } from \"react\"\r\n\r\n  \r\n\r\nconst Quiz = (props: StepComponentProps): JSX.Element => {\r\n\r\n    interface Answer {\r\n        text: string;\r\n        isCorrect: boolean;\r\n    }\r\n\r\n    //Esto es como un using en c++\r\n    type FormElement = React.FormEvent<HTMLFormElement>;\r\n\r\n    //Donde almacenamos la pregunta\r\n    const [question, setQuestion] = useState<string>(\"\");\r\n    //Array con las posibles respuestas a esa pregunta\r\n    const [answers, setAnswers] = useState<Answer[]>([]);\r\n    //Respuesta en proceso\r\n    const [currAnswer, setCurrAnswer] = useState<string>(\"\");\r\n\r\n    \r\n    \r\n    //const [quizAddFunction, setFuncion] = useState<Function>(props.funcion);\r\n    const [index, setIndex] = useState(props.order);\r\n    \r\n\r\n    //Nada mas montarme le pregunto al contenedor si ya existe el array en el que se van a almacenar todos los datos\r\n    //si NO existe lo creamos\r\n    useEffect(() => {\r\n        //Le digo que me de el valor de DATA y un valor por defecto en caso de NO encontrarlo, si obtengo el valor por defecto \r\n        //le asigno el un valor inicial\r\n        if(props.getState<string>('DATA', \"\") === \"\"){}\r\n\r\n      }, []); \r\n\r\n        \r\n    const modifyQuestion = (e:string):void =>{\r\n        setQuestion(e);\r\n        props.setState<string>('firstname', \"Hola\", '')\r\n\r\n        //ME hago con el estado actual del array de info de la aventura\r\n        let new_state = props.getState<string>('DATA', '{nombre: \"hola\"}'); \r\n        var casteado = {nombre:\"Hola a todos\", fases:[{}] };\r\n        casteado.fases[props.order] = {pregunta:\"Hola a todos\"};\r\n        var vueltaAString = JSON.stringify(casteado); \r\n        print(vueltaAString);\r\n        props.setState<string>('DATA',vueltaAString,\"\");\r\n    }\r\n\r\n\r\n    const handleNewQuestion = (e:FormElement):void =>{\r\n        e.preventDefault();\r\n        addAnswer(currAnswer);\r\n        setCurrAnswer(\"\");\r\n    }\r\n\r\n    //Funcion que genera algo de tipo JSON que va a pedir la App cuando vaya a generar un JSON con la aventura\r\n    function DataForJSON(){\r\n\r\n        downloadFile(JSON.stringify({pregunta:question, respuestas:answers}, null, 2),'answers.json','text/json')\r\n        console.log(\"Vamos a meter un quiz, mi indice es \"+ index);\r\n        console.log(\"Mi pregunta: \"+question+\", \" + question.toString()+ \", \" + question.valueOf()+\" , \" + {question}.question+ \", \"+{question});\r\n        console.log(\"Referencia \"+ JSON.stringify(question,null,2) +\",\" + JSON.stringify({question},null,2));\r\n        let myData = {Pregunta: question, Respuestas: answers, indi: index};\r\n        myData.Respuestas = answers;\r\n        \r\n        return myData;\r\n    }\r\n\r\n    const DataParaJSON = (): {} => {\r\n        var myData = {Pregunta: question, Respuestas: answers, indi: index};\r\n        myData.Respuestas = answers;\r\n        return myData;\r\n    }\r\n\r\n    const addAnswer = (text:string):void =>{\r\n        console.log(\"Respuesta aÃ±adida\");\r\n        setAnswers([...answers, {text, isCorrect:false}]);\r\n    }\r\n\r\n    const removeAnswer = (index:number): void =>{\r\n        const newAnswers: Answer[] = [...answers];\r\n        newAnswers.splice(index, 1);\r\n        setAnswers(newAnswers);\r\n    }\r\n\r\n    const setAnswerAsCorrect = (index:number):void =>{\r\n        const newAnswers: Answer[] = [...answers];\r\n        newAnswers[index].isCorrect = !newAnswers[index].isCorrect;\r\n        setAnswers(newAnswers);\r\n\r\n    }\r\n\r\n    const downloadFile = ( data:string, fileName:string, fileType:string ) => {\r\n        // Create a blob with the data we want to download as a file\r\n        const blob = new Blob([data], { type: fileType })\r\n        // Create an anchor element and dispatch a click event on it\r\n        // to trigger a download\r\n        const a = document.createElement('a')\r\n        a.download = fileName\r\n        a.href = window.URL.createObjectURL(blob)\r\n        const clickEvt = new MouseEvent('click', {\r\n          view: window,\r\n          bubbles: true,\r\n          cancelable: true,\r\n        })\r\n        a.dispatchEvent(clickEvt)\r\n        a.remove()\r\n    }\r\n\r\n    const exportToJson = (e:FormElement) => {\r\n        //Para que no se refresque la pagina en el onSubmit\r\n        e.preventDefault()\r\n\r\n        if (question !== \"\" && answers.length >= 2 && answers.length <= 6){\r\n            console.log(\"Llamada a export to JSON\")\r\n            downloadFile(JSON.stringify({pregunta:question, respuestas:answers}, null, 2),'answers.json','text/json')\r\n        }\r\n        else{\r\n            console.log(\"Rellena bien\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Configuracion de evento de quiz:</h2>\r\n            <form onSubmit={e => e.preventDefault() }>\r\n                <h3>AÃ±ada aqui la pregunta del cuestionario</h3>\r\n                <input className=\"form-control\" type=\"text\" required value={question} onChange ={ e =>modifyQuestion(e.target.value)}></input>\r\n            </form>\r\n\r\n            <h2>Pregunta actual: {question}</h2>\r\n\r\n            <form onSubmit={handleNewQuestion}>\r\n                <input className= \"form-control\" type=\"text\" required value={currAnswer} onChange={e =>setCurrAnswer(e.target.value)}></input>\r\n                <button className=\"btn btn-outline-primary mt-2\" type=\"submit\">Add Answer</button>\r\n            </form>\r\n            \r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <section>\r\n            {answers.map((answer: Answer, index:number) => (\r\n            <Fragment key={\"Respuesta: \" + index}>\r\n               <div className=\"text-md-left\" style={{textDecoration: answer.isCorrect ? \"underline\" : \" \"}}>{answer.text}</div>\r\n               <button className=\"btn btn-outline-primary mt-2\" onClick = {():void => setAnswerAsCorrect(index)}>\r\n                   <div>{!answer.isCorrect ? \"Correcta\" : \"Incorrecta\"}</div>\r\n               </button>\r\n               <button className = \"btn btn-outline-danger mt-2\" onClick={():void => removeAnswer(index)}>Borrar respuesta</button>\r\n           </Fragment>\r\n            ))}\r\n            </section>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <form onSubmit= {exportToJson}>\r\n                <button className=\"btn btn-outline-primary mt-2\" type=\"submit\">Creame un JSON hijo mio</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}